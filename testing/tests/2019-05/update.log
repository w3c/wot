Processing organization Fujitsu
  in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu
  Processing implementation Fujitsu/fujitsu-rotary-beacon-light
    in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-rotary-beacon-light.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-rotary-beacon-light.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-rotary-beacon-light.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-rotary-beacon-light.csv.temp1

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-rotary-beacon-light.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-rotary-beacon-light.csv.temp1"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-rotary-beacon-light.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-rotary-beacon-light.csv.temp1
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-rotary-beacon-light.csv.temp1
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-rotary-beacon-light.jsonld  for validation
VALIDATION ERROR!!! :  data should have required property 'title'
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-rotary-beacon-light.csv.temp1 /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-rotary-beacon-light.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-rotary-beacon-light.csv.temp2
mv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-rotary-beacon-light.csv.temp2 /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-rotary-beacon-light.csv
rm /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-rotary-beacon-light.csv.temp1
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-rotary-beacon-light.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-rotary-beacon-light.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-rotary-beacon-light.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-rotary-beacon-light.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-rotary-beacon-light.csv
  Processing implementation Fujitsu/fujitsu-wifi-agent
    in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-wifi-agent.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-wifi-agent.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-wifi-agent.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-wifi-agent.csv.temp1

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-wifi-agent.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-wifi-agent.csv.temp1"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-wifi-agent.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-wifi-agent.csv.temp1
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-wifi-agent.csv.temp1
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-wifi-agent.jsonld  for validation
VALIDATION ERROR!!! :  data should have required property 'title'
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-wifi-agent.csv.temp1 /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-wifi-agent.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-wifi-agent.csv.temp2
mv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-wifi-agent.csv.temp2 /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-wifi-agent.csv
rm /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-wifi-agent.csv.temp1
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-wifi-agent.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-wifi-agent.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-wifi-agent.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-wifi-agent.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-wifi-agent.csv
  Processing implementation Fujitsu/fujitsu-ECHONET-Lite-devices
    under /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices
    Processing instance Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.jsonld  for validation
VALIDATION ERROR!!! :  data.id should match format "uri"
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.csv
    Processing instance Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.jsonld  for validation
VALIDATION ERROR!!! :  data.id should match format "uri"
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.csv
    Processing instance Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.jsonld  for validation
VALIDATION ERROR!!! :  data.id should match format "uri"
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.csv
>>>>>>>>>>>> Merge: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.csv
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-ECHONET-Lite-devices.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindClose.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-BlindOpen.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices/Fujitsu-LED.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices.csv.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices.csv.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-ECHONET-Lite-devices.csv
  Processing implementation Fujitsu/fujitsu-proxy
    under /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-proxy
    Processing instance Fujitsu/fujitsu-proxy/ProxyTest
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-proxy/ProxyTest.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-proxy/ProxyTest.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-proxy/ProxyTest.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-proxy/ProxyTest.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-proxy/ProxyTest.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-proxy/ProxyTest.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-proxy/ProxyTest.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-proxy/ProxyTest.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-proxy/ProxyTest.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-proxy/ProxyTest.jsonld  for validation
VALIDATION ERROR!!! :  data should have required property 'title'
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-proxy/ProxyTest.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-proxy/ProxyTest.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-proxy/ProxyTest.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-proxy/ProxyTest.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-proxy/ProxyTest.csv
>>>>>>>>>>>> Merge: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-proxy.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-proxy/ProxyTest.csv
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Fujitsu/fujitsu-proxy.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-proxy/ProxyTest.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-proxy.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-proxy.csv.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-proxy.csv.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-proxy.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Fujitsu/fujitsu-proxy.csv
Processing organization Hitachi
  in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Hitachi
Processing organization Intel
  in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel
  Processing implementation Intel/intel-camera
    in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-camera.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-camera.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-camera.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-camera.csv.temp1

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-camera.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-camera.csv.temp1"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-camera.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-camera.csv.temp1
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-camera.csv.temp1
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-camera.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'crop\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
[ { keyword: 'const',
    dataPath: '.actions[\'crop\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
[ { keyword: 'const',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_uriVariables=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'xo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'xo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'yo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'yo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'x\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'x\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'y\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'y\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
[ { keyword: 'const',
    dataPath: '.actions[\'crop\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[10]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[10]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[11]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[11]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[12]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[12]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[13]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[13]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[14]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[14]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[10]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[10]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[11]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[11]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[12]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[12]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[13]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[13]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[14]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[14]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[10]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[10]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  ... 256 more items ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'frame\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'frame\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'frame\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'frame\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[10]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[10]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[11]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[11]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[12]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[12]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[13]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[13]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[14]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[14]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[10]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[10]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[11]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[11]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[12]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[12]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[13]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[13]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[14]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[14]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[10]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[10]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  ... 276 more items ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'frame\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'frame\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'crop\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-input--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'xo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'xo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'yo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'yo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'x\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'x\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'y\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'y\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'frame\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'frame\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
[ { keyword: 'const',
    dataPath: '.actions[\'crop\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[11]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[11]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[14]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[14]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[11]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[11]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[14]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[14]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[11]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[11]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[14]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[14]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[11]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[11]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[14]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[14]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\'].forms[11]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\'].forms[11]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\'].forms[14]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\'].forms[14]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\'].forms[11]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\'].forms[11]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\'].forms[14]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\'].forms[14]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\'].forms[11]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\'].forms[11]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\'].forms[14]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\'].forms[14]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[11]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[11]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[14]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[14]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\'].forms[11]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\'].forms[11]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  ... 22 more items ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[12]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[12]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[12]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[12]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[12]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[12]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[12]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[12]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\'].forms[12]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\'].forms[12]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\'].forms[12]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\'].forms[12]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\'].forms[12]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\'].forms[12]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[12]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[12]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  ... 22 more items ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[10]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[10]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[13]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[13]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[10]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[10]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[13]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[13]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[10]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[10]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[13]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[13]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[10]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[10]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[13]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[13]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\'].forms[10]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\'].forms[10]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\'].forms[13]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\'].forms[13]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\'].forms[10]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\'].forms[10]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\'].forms[13]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\'].forms[13]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\'].forms[10]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\'].forms[10]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\'].forms[13]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\'].forms[13]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[10]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[10]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[13]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\'].forms[13]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\'].forms[10]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\'].forms[10]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  ... 12 more items ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'crop\'].input',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'crop\'].input',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
[ { keyword: 'const',
    dataPath: '.actions[\'crop\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-response--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-response--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-response--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-response--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-response--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[10]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[10]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[11]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[11]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[12]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[12]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[13]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[13]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[14]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[14]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[10]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[10]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[11]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[11]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[12]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[12]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[13]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[13]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\'].forms[14]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\'].forms[14]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[10]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[10]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[11]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[11]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[12]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[12]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[13]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[13]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\'].forms[14]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\'].forms[14]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  ... 196 more items ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'frame\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'frame\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'xo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'xo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'yo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'yo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'x\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'x\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'y\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'y\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'frame\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'frame\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure_auto_priority\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'contrast\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'gamma\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'saturation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'hue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'white_balance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'exposure\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'backlight_compensation\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'sharpness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'xo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'xo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'yo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'yo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'x\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'x\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'crop\'].input.properties[\'y\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input.properties[\'y\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.actions[\'crop\'].input',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'crop\'].input',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-uriVariables--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'region\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-camera.csv.temp1 /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-camera.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-camera.csv.temp2
mv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-camera.csv.temp2 /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-camera.csv
rm /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-camera.csv.temp1
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-camera.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-camera.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-camera.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-camera.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-camera.csv
  Processing implementation Intel/intel-speak
    in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-speak.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-speak.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-speak.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-speak.csv.temp1

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-speak.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-speak.csv.temp1"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-speak.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-speak.csv.temp1
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-speak.csv.temp1
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-speak.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
[ { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'say\'].input',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].input',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'say\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'say\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-input--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
[ { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'say\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.actions[\'say\'].input',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'say\'].input',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-speak.csv.temp1 /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-speak.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-speak.csv.temp2
mv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-speak.csv.temp2 /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-speak.csv
rm /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-speak.csv.temp1
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-speak.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-speak.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-speak.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-speak.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-speak.csv
  Processing implementation Intel/intel-ocf
    under /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf
    Processing instance Intel/intel-ocf/button1touch
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button1touch.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button1touch.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button1touch.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button1touch.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button1touch.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button1touch.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button1touch.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button1touch.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button1touch.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button1touch.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button1touch.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button1touch.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button1touch.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button1touch.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button1touch.csv
    Processing instance Intel/intel-ocf/button2touch
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button2touch.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button2touch.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button2touch.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button2touch.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button2touch.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button2touch.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button2touch.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button2touch.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button2touch.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button2touch.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button2touch.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button2touch.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/button2touch.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button2touch.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button2touch.csv
    Processing instance Intel/intel-ocf/buzzer0
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/buzzer0.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/buzzer0.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/buzzer0.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/buzzer0.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/buzzer0.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/buzzer0.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/buzzer0.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/buzzer0.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/buzzer0.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/buzzer0.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/buzzer0.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/buzzer0.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/buzzer0.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/buzzer0.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/buzzer0.csv
    Processing instance Intel/intel-ocf/illuminance0
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance0.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance0.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance0.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance0.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance0.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance0.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance0.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance0.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance0.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance0.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance0.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance0.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance0.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance0.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance0.csv
    Processing instance Intel/intel-ocf/illuminance2
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance2.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance2.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance2.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance2.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance2.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance2.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance2.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance2.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance2.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance2.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'illuminance\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'illuminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance2.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance2.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/illuminance2.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance2.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance2.csv
    Processing instance Intel/intel-ocf/led0blue
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0blue.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0blue.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0blue.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0blue.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0blue.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0blue.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0blue.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0blue.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0blue.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0blue.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0blue.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0blue.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0blue.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0blue.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0blue.csv
    Processing instance Intel/intel-ocf/led0green
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0green.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0green.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0green.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0green.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0green.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0green.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0green.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0green.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0green.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0green.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0green.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0green.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0green.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0green.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0green.csv
    Processing instance Intel/intel-ocf/led0mosfet
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0mosfet.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0mosfet.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0mosfet.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0mosfet.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0mosfet.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0mosfet.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0mosfet.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0mosfet.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0mosfet.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0mosfet.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0mosfet.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0mosfet.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0mosfet.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0mosfet.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0mosfet.csv
    Processing instance Intel/intel-ocf/led0red
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0red.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0red.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0red.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0red.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0red.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0red.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0red.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0red.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0red.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0red.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0red.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0red.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led0red.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0red.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0red.csv
    Processing instance Intel/intel-ocf/led1mosfet
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1mosfet.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1mosfet.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1mosfet.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1mosfet.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1mosfet.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1mosfet.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1mosfet.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1mosfet.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1mosfet.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1mosfet.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1mosfet.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1mosfet.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1mosfet.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1mosfet.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1mosfet.csv
    Processing instance Intel/intel-ocf/led1red
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1red.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1red.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1red.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1red.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1red.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1red.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1red.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1red.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1red.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1red.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1red.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1red.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1red.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1red.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1red.csv
    Processing instance Intel/intel-ocf/led1relay
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1relay.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1relay.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1relay.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1relay.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1relay.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1relay.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1relay.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1relay.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1relay.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1relay.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1relay.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1relay.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led1relay.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1relay.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1relay.csv
    Processing instance Intel/intel-ocf/led2mosfet
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2mosfet.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2mosfet.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2mosfet.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2mosfet.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2mosfet.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2mosfet.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2mosfet.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2mosfet.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2mosfet.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2mosfet.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2mosfet.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2mosfet.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2mosfet.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2mosfet.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2mosfet.csv
    Processing instance Intel/intel-ocf/led2relay
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2relay.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2relay.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2relay.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2relay.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2relay.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2relay.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2relay.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2relay.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2relay.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2relay.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2relay.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2relay.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2relay.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2relay.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2relay.csv
    Processing instance Intel/intel-ocf/led2side
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2side.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2side.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2side.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2side.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2side.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2side.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2side.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2side.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2side.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2side.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2side.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2side.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2side.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2side.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2side.csv
    Processing instance Intel/intel-ocf/led2top
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2top.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2top.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2top.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2top.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2top.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2top.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2top.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2top.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2top.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2top.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2top.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2top.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/led2top.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2top.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2top.csv
    Processing instance Intel/intel-ocf/motion0
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion0.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion0.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion0.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion0.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion0.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion0.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion0.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion0.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion0.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion0.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion0.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion0.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion0.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion0.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion0.csv
    Processing instance Intel/intel-ocf/motion1
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion1.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion1.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion1.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion1.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion1.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion1.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion1.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion1.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion1.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion1.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion1.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion1.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion1.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion1.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion1.csv
    Processing instance Intel/intel-ocf/motion2
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion2.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion2.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion2.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion2.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion2.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion2.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion2.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion2.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion2.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion2.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'motion\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'motion\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion2.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion2.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/motion2.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion2.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion2.csv
    Processing instance Intel/intel-ocf/rgbled1
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/rgbled1.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/rgbled1.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/rgbled1.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/rgbled1.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/rgbled1.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/rgbled1.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/rgbled1.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/rgbled1.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/rgbled1.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/rgbled1.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
[ { keyword: 'type',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/type',
    params: { type: 'object' },
    message: 'should be object' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'oneOf',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/else/properties/items/oneOf',
    params: { passingSchemas: null },
    message: 'should match exactly one schema in oneOf' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-items--ArraySchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
[ { keyword: 'type',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/type',
    params: { type: 'object' },
    message: 'should be object' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'oneOf',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/else/properties/items/oneOf',
    params: { passingSchemas: null },
    message: 'should match exactly one schema in oneOf' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
[ { keyword: 'type',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/type',
    params: { type: 'object' },
    message: 'should be object' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'oneOf',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/else/properties/items/oneOf',
    params: { passingSchemas: null },
    message: 'should match exactly one schema in oneOf' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'on\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'off\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_array=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
[ { keyword: 'type',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/type',
    params: { type: 'object' },
    message: 'should be object' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'oneOf',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\'].items',
    schemaPath: '#/else/properties/items/oneOf',
    params: { passingSchemas: null },
    message: 'should match exactly one schema in oneOf' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'colour\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'colour\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/rgbled1.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/rgbled1.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/rgbled1.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/rgbled1.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/rgbled1.csv
    Processing instance Intel/intel-ocf/temperature0
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature0.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature0.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature0.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature0.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature0.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature0.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature0.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature0.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature0.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature0.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature0.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature0.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature0.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature0.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature0.csv
    Processing instance Intel/intel-ocf/temperature1
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature1.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature1.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature1.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature1.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature1.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature1.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature1.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature1.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature1.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature1.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature1.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature1.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature1.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature1.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature1.csv
    Processing instance Intel/intel-ocf/temperature2
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature2.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature2.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature2.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature2.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature2.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature2.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature2.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature2.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature2.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature2.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature2.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature2.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/temperature2.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature2.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature2.csv
    Processing instance Intel/intel-ocf/toggle0
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle0.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle0.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle0.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle0.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle0.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle0.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle0.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle0.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle0.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle0.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle0.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle0.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle0.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle0.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle0.csv
    Processing instance Intel/intel-ocf/toggle1
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle1.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle1.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle1.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle1.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle1.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle1.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle1.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle1.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle1.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle1.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle1.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle1.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle1.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle1.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle1.csv
    Processing instance Intel/intel-ocf/toggle2
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle2.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle2.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle2.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle2.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle2.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle2.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle2.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle2.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle2.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle2.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_writeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_digest=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'digest_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[7]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[8]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[9]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'value\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].properties[\'id\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle2.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle2.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf/toggle2.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle2.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle2.csv
>>>>>>>>>>>> Merge: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button1touch.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button2touch.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/buzzer0.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance0.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance2.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0blue.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0green.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0mosfet.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0red.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1mosfet.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1red.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1relay.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2mosfet.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2relay.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2side.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2top.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion0.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion1.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion2.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/rgbled1.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature0.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature1.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature2.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle0.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle1.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle2.csv
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Intel/intel-ocf.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button1touch.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/button2touch.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/buzzer0.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance0.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/illuminance2.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0blue.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0green.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0mosfet.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led0red.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1mosfet.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1red.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led1relay.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2mosfet.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2relay.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2side.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/led2top.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion0.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion1.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/motion2.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/rgbled1.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature0.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature1.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/temperature2.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle0.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle1.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf/toggle2.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf.csv.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf.csv.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Intel/intel-ocf.csv
Processing organization Oracle
  in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle
  Processing implementation Oracle/oracle-simulators
    under /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators
    Processing instance Oracle/oracle-simulators/Blue_Pump_Events
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Events.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Events.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Events.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Events.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Events.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Events.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Events.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Events.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Events.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Events.jsonld  for validation
VALIDATION ERROR!!! :  data should have required property 'title'
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Events.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Events.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Events.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Events.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Events.csv
    Processing instance Oracle/oracle-simulators/Blue_Pump_Shared
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Shared.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Shared.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Shared.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Shared.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Shared.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Shared.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Shared.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Shared.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Shared.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Shared.jsonld  for validation
VALIDATION ERROR!!! :  data should have required property 'title'
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Shared.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Shared.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Blue_Pump_Shared.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Shared.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Shared.csv
    Processing instance Oracle/oracle-simulators/Connected_Car_Shared
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Connected_Car_Shared.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Connected_Car_Shared.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Connected_Car_Shared.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Connected_Car_Shared.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Connected_Car_Shared.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Connected_Car_Shared.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Connected_Car_Shared.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Connected_Car_Shared.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Connected_Car_Shared.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Connected_Car_Shared.jsonld  for validation
VALIDATION ERROR!!! :  data should have required property 'title'
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Connected_Car_Shared.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Connected_Car_Shared.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Connected_Car_Shared.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Connected_Car_Shared.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Connected_Car_Shared.csv
    Processing instance Oracle/oracle-simulators/Festo_Shared
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Festo_Shared.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Festo_Shared.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Festo_Shared.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Festo_Shared.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Festo_Shared.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Festo_Shared.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Festo_Shared.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Festo_Shared.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Festo_Shared.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Festo_Shared.jsonld  for validation
VALIDATION ERROR!!! :  data should have required property 'title'
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Festo_Shared.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Festo_Shared.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Festo_Shared.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Festo_Shared.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Festo_Shared.csv
    Processing instance Oracle/oracle-simulators/HVAC_Shared
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/HVAC_Shared.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/HVAC_Shared.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/HVAC_Shared.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/HVAC_Shared.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/HVAC_Shared.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/HVAC_Shared.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/HVAC_Shared.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/HVAC_Shared.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/HVAC_Shared.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/HVAC_Shared.jsonld  for validation
VALIDATION ERROR!!! :  data should have required property 'title'
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/HVAC_Shared.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/HVAC_Shared.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/HVAC_Shared.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/HVAC_Shared.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/HVAC_Shared.csv
    Processing instance Oracle/oracle-simulators/KETI_IoT_Sensor
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/KETI_IoT_Sensor.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/KETI_IoT_Sensor.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/KETI_IoT_Sensor.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/KETI_IoT_Sensor.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/KETI_IoT_Sensor.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/KETI_IoT_Sensor.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/KETI_IoT_Sensor.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/KETI_IoT_Sensor.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/KETI_IoT_Sensor.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/KETI_IoT_Sensor.jsonld  for validation
VALIDATION ERROR!!! :  data should have required property 'title'
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/KETI_IoT_Sensor.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/KETI_IoT_Sensor.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/KETI_IoT_Sensor.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/KETI_IoT_Sensor.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/KETI_IoT_Sensor.csv
    Processing instance Oracle/oracle-simulators/Truck_Shared
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Truck_Shared.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Truck_Shared.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Truck_Shared.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Truck_Shared.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Truck_Shared.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Truck_Shared.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Truck_Shared.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Truck_Shared.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Truck_Shared.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Truck_Shared.jsonld  for validation
VALIDATION ERROR!!! :  data should have required property 'title'
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Truck_Shared.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Truck_Shared.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Oracle/oracle-simulators/Truck_Shared.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Truck_Shared.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Truck_Shared.csv
>>>>>>>>>>>> Merge: /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Events.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Shared.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Connected_Car_Shared.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Festo_Shared.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/HVAC_Shared.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/KETI_IoT_Sensor.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Truck_Shared.csv
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Events.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Blue_Pump_Shared.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Connected_Car_Shared.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Festo_Shared.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/HVAC_Shared.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/KETI_IoT_Sensor.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators/Truck_Shared.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Oracle/oracle-simulators.csv
Processing organization Panasonic
  in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic
  Processing implementation Panasonic/panasonic-server-real
    under /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real
    Processing instance Panasonic/panasonic-server-real/airConditioner_p1
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/airConditioner_p1.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/airConditioner_p1.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/airConditioner_p1.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/airConditioner_p1.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/airConditioner_p1.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/airConditioner_p1.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/airConditioner_p1.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/airConditioner_p1.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/airConditioner_p1.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/airConditioner_p1.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
[ { keyword: 'const',
    dataPath: '.events[\'change\']',
    schemaPath: '#/definitions/event_element/then/const',
    params: { allowedValue: 'td-event-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\']',
    schemaPath: '#/definitions/event_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
[ { keyword: 'const',
    dataPath: '.events[\'change\']',
    schemaPath: '#/definitions/event_element/then/const',
    params: { allowedValue: 'td-event-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\']',
    schemaPath: '#/definitions/event_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
[ { keyword: 'const',
    dataPath: '.events[\'change\']',
    schemaPath: '#/definitions/event_element/then/const',
    params: { allowedValue: 'td-event-names_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\']',
    schemaPath: '#/definitions/event_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
[ { keyword: 'const',
    dataPath: '.events[\'change\']',
    schemaPath: '#/definitions/event_element/then/const',
    params: { allowedValue: 'td-event-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\']',
    schemaPath: '#/definitions/event_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
[ { keyword: 'const',
    dataPath: '.events[\'change\']',
    schemaPath: '#/definitions/event_element/then/const',
    params: { allowedValue: 'td-event-names_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\']',
    schemaPath: '#/definitions/event_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_enum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_unit=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-title-description_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-title-description_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-alg--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-authorization--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
[ { keyword: 'const',
    dataPath: '.events[\'change\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-data--EventAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-description--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-descriptions--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-descriptions--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-descriptions--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-descriptions--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-descriptions--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-descriptions--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-descriptions--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-descriptions--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-descriptions--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-enum--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-enum--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-format--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.events[\'change\'].data',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_bearer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.events[\'change\'].data',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'change\'].data.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'change\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-unit--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/airConditioner_p1.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/airConditioner_p1.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/airConditioner_p1.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/airConditioner_p1.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/airConditioner_p1.csv
    Processing instance Panasonic/panasonic-server-real/cleaner_p1
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/cleaner_p1.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/cleaner_p1.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/cleaner_p1.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/cleaner_p1.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/cleaner_p1.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/cleaner_p1.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/cleaner_p1.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/cleaner_p1.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/cleaner_p1.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/cleaner_p1.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'specifyArea\'].input',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\'].input',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-title-description_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-title-description_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-authorization--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goHome\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'specifyArea\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-description--SecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-descriptions--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-descriptions--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-descriptions--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-descriptions--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-descriptions--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-descriptions--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-descriptions--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-descriptions--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-descriptions--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-descriptions--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-descriptions--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-descriptions--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-descriptions--SecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-idempotent--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-idempotent--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-input--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'specifyArea\'].input',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\'].input',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'specifyArea\'].input',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\'].input',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-name--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_bearer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.actions[\'specifyArea\'].input',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'specifyArea\'].input',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/cleaner_p1.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/cleaner_p1.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/cleaner_p1.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/cleaner_p1.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/cleaner_p1.csv
    Processing instance Panasonic/panasonic-server-real/electricBulletinBoard_p1
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-alg--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-authorization--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-format--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_bearer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.csv
    Processing instance Panasonic/panasonic-server-real/electricBulletinBoard_p2
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-alg--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-authorization--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-format--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_bearer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.csv
    Processing instance Panasonic/panasonic-server-real/electricBulletinBoard_p3
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
[ { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
[ { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-alg--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-authorization--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'displayNumber\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-format--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_bearer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'displayNumber\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.csv
    Processing instance Panasonic/panasonic-server-real/electricBulletinBoards
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoards.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoards.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoards.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoards.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoards.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoards.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoards.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoards.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoards.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoards.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].uriVariables[\'number\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].uriVariables[\'number\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].uriVariables[\'number\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].uriVariables[\'number\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_uriVariables=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_uriVariables=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-alg--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-authorization--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-format--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].uriVariables[\'number\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].uriVariables[\'number\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].uriVariables[\'number\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].uriVariables[\'number\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].uriVariables[\'number\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].uriVariables[\'number\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].uriVariables[\'number\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].uriVariables[\'number\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_bearer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].uriVariables[\'number\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].uriVariables[\'number\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].uriVariables[\'number\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].uriVariables[\'number\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-uriVariables--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-uriVariables--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoards.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoards.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/electricBulletinBoards.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoards.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoards.csv
    Processing instance Panasonic/panasonic-server-real/huegroup_p1
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/huegroup_p1.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/huegroup_p1.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/huegroup_p1.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/huegroup_p1.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/huegroup_p1.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/huegroup_p1.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/huegroup_p1.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/huegroup_p1.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/huegroup_p1.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/huegroup_p1.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-alg--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-authorization--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-format--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_bearer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationStatus\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/huegroup_p1.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/huegroup_p1.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real/huegroup_p1.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/huegroup_p1.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/huegroup_p1.csv
>>>>>>>>>>>> Merge: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/airConditioner_p1.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/cleaner_p1.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoards.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/huegroup_p1.csv
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-real.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/airConditioner_p1.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/cleaner_p1.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p1.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p2.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoard_p3.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/electricBulletinBoards.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real/huegroup_p1.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real.csv.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real.csv.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-real.csv
  Processing implementation Panasonic/panasonic-server-simulator
    under /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator
    Processing instance Panasonic/panasonic-server-simulator/PanaSimAirConditioner5
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_enum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maximum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minimum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-alg--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-authorization--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-enum--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-format--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_bearer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'desiredTemp\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'windVolumeLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'operationMode\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.csv
    Processing instance Panasonic/panasonic-server-simulator/PanaSimCleaner5
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-alg--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-authorization--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'operationPower\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goHome\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-format--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-idempotent--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-idempotent--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goHome\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_bearer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'operationPower\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnRight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'turnLeft\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'goStraight\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.csv
    Processing instance Panasonic/panasonic-server-simulator/PanaSimHueGroup5
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-alg--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-authorization--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-format--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_bearer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'red\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'green\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\'].properties[\'blue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'rgbValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.csv
    Processing instance Panasonic/panasonic-server-simulator/PanaSimRoomLight5
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.jsonld
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.jsonld
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.jsonld /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.jsonld" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.jsonld
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.jsonld  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
[ { keyword: 'const',
    dataPath: '.events[\'alert\']',
    schemaPath: '#/definitions/event_element/then/const',
    params: { allowedValue: 'td-event-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\']',
    schemaPath: '#/definitions/event_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\']',
    schemaPath: '#/definitions/event_element/then/const',
    params: { allowedValue: 'td-event-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\']',
    schemaPath: '#/definitions/event_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
[ { keyword: 'const',
    dataPath: '.events[\'detect\']',
    schemaPath: '#/definitions/event_element/then/const',
    params: { allowedValue: 'td-event-names_uriVariables=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\']',
    schemaPath: '#/definitions/event_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
[ { keyword: 'const',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_enum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].data.properties[\'message\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].data.properties[\'message\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-alg--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-at-type--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-at-type--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-authorization--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'luminance\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'luminance\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'luminance\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
[ { keyword: 'const',
    dataPath: '.events[\'alert\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-data--EventAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-data--EventAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-enum--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-format--BearerSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.events[\'alert\'].data',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_bearer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'bearer_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-security--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'detect\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
[ { keyword: 'const',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_boolean=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'power\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
[ { keyword: 'const',
    dataPath: '.events[\'detect\'].data',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_null=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'luminance\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.events[\'alert\'].data',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'color\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'alert\'].data.properties[\'message\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].data.properties[\'message\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'alert\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.events[\'detect\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-uriVariables--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'detect\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.csv
>>>>>>>>>>>> Merge: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.csv
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Panasonic/panasonic-server-simulator.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimAirConditioner5.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimCleaner5.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimHueGroup5.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator/PanaSimRoomLight5.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator.csv.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator.csv.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Panasonic/panasonic-server-simulator.csv
Processing organization Siemens
  in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens
  Processing implementation Siemens/siemens-customEvent
    under /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-customEvent
    Processing instance Siemens/siemens-customEvent/eventTest-siemens
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-customEvent/eventTest-siemens.json
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-customEvent/eventTest-siemens.json
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-customEvent/eventTest-siemens.json /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-customEvent/eventTest-siemens.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-customEvent/eventTest-siemens.json" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-customEvent/eventTest-siemens.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-customEvent/eventTest-siemens.json
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-customEvent/eventTest-siemens.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-customEvent/eventTest-siemens.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-customEvent/eventTest-siemens.json  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\']',
    schemaPath: '#/definitions/event_element/then/const',
    params: { allowedValue: 'td-event-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\']',
    schemaPath: '#/definitions/event_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription.properties[\'subscriptionID\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription.properties[\'subscriptionID\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].cancellation.properties[\'subscriptionID\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].cancellation.properties[\'subscriptionID\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].cancellation',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].data',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-event=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-event=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription.properties[\'targetURL\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription.properties[\'targetURL\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-event-names_cancellation--EventAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-data--EventAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-description--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_subscribeevent=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_unsubscribeevent=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].cancellation',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].cancellation',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription.properties[\'subscriptionID\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription.properties[\'subscriptionID\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-subscription--EventAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription.properties[\'subscriptionID\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription.properties[\'subscriptionID\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].cancellation.properties[\'subscriptionID\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].cancellation.properties[\'subscriptionID\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].cancellation',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].data',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].cancellation',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].cancellation',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription.properties[\'targetURL\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription.properties[\'targetURL\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription.properties[\'targetURL\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription.properties[\'targetURL\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].subscription',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'const',
    dataPath: '.events[\'temperatureValueForT2T\'].cancellation.properties[\'subscriptionID\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].cancellation.properties[\'subscriptionID\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.events[\'temperatureValueForT2T\'].cancellation',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-customEvent/eventTest-siemens.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-customEvent/eventTest-siemens.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-customEvent/eventTest-siemens.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-customEvent/eventTest-siemens.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-customEvent/eventTest-siemens.csv
>>>>>>>>>>>> Merge: /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-customEvent/eventTest-siemens.csv
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-customEvent/eventTest-siemens.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-customEvent.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-customEvent.csv
  Processing implementation Siemens/siemens-node-wot
    under /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot
    Processing instance Siemens/siemens-node-wot/dataSchemaTest-siemens
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.json
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.json
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.json /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.json" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.json
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.json  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'waterLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'waterLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'type',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/else/properties/items/oneOf/1/type',
    params: { type: 'array' },
    message: 'should be array' },
  { keyword: 'oneOf',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/else/properties/items/oneOf',
    params: { passingSchemas: null },
    message: 'should match exactly one schema in oneOf' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-number-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
[ { keyword: 'const',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_const=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_enum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
[ { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_oneOf=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
[ { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_properties=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
[ { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_required=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_unit=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_writeOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_writeOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_writeOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_writeOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_writeOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].oneOf[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].oneOf[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1].items',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1].items',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'type',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1].items',
    schemaPath: '#/else/properties/items/oneOf/1/type',
    params: { type: 'array' },
    message: 'should be array' },
  { keyword: 'oneOf',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1].items',
    schemaPath: '#/else/properties/items/oneOf',
    params: { passingSchemas: null },
    message: 'should match exactly one schema in oneOf' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-title-description_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-title-description_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-const--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-descriptions--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-descriptions--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-enum--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].oneOf[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-enum--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].oneOf[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1].items',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-enum--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1].items',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'type',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1].items',
    schemaPath: '#/else/properties/items/oneOf/1/type',
    params: { type: 'array' },
    message: 'should be array' },
  { keyword: 'oneOf',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1].items',
    schemaPath: '#/else/properties/items/oneOf',
    params: { passingSchemas: null },
    message: 'should match exactly one schema in oneOf' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-items--ArraySchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-items--ArraySchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maxItems--ArraySchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'waterLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'waterLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'type',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/else/properties/items/oneOf/1/type',
    params: { type: 'array' },
    message: 'should be array' },
  { keyword: 'oneOf',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/else/properties/items/oneOf',
    params: { passingSchemas: null },
    message: 'should match exactly one schema in oneOf' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maximum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minItems--ArraySchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'waterLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'waterLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--IntegerSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'type',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/else/properties/items/oneOf/1/type',
    params: { type: 'array' },
    message: 'should be array' },
  { keyword: 'oneOf',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/else/properties/items/oneOf',
    params: { passingSchemas: null },
    message: 'should match exactly one schema in oneOf' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minimum--NumberSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-oneOf--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-properties--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-required--ObjectSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
[ { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_array=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_array=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'waterLevel\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'waterLevel\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'type',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/else/properties/items/oneOf/1/type',
    params: { type: 'array' },
    message: 'should be array' },
  { keyword: 'oneOf',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\'].items',
    schemaPath: '#/else/properties/items/oneOf',
    params: { passingSchemas: null },
    message: 'should match exactly one schema in oneOf' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'rgb\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
[ { keyword: 'const',
    dataPath: '.properties[\'fullData\'].properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_number=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\'].properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
[ { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_object=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].oneOf[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].oneOf[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1].items',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1].items',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'type',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1].items',
    schemaPath: '#/else/properties/items/oneOf/1/type',
    params: { type: 'array' },
    message: 'should be array' },
  { keyword: 'oneOf',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1].items',
    schemaPath: '#/else/properties/items/oneOf',
    params: { passingSchemas: null },
    message: 'should match exactly one schema in oneOf' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\'].oneOf[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-unit--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'temperature\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'fullData\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'constValue\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'oneOfTest\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.csv
    Processing instance Siemens/siemens-node-wot/fullInteractionsTest-siemens
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.json
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.json
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.json /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.json" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.json
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.json  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].data',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
[ { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
[ { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-event=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-event=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-event=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-event=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-event=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-event=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-event=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_writeOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-string-type.json
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-title-description_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-anchor--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
[ { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[6]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-contentCoding=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[6]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
[ { keyword: 'const',
    dataPath: '.events[\'onchange\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-data--EventAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-idempotent--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-idempotent--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-idempotent--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
[ { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
[ { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_subscribeevent=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_subscribeevent=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_subscribeevent=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_subscribeevent=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_subscribeevent=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_subscribeevent=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[6]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_subscribeevent=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[6]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-rel--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-safe--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-safe--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-safe--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.events[\'onchange\'].data',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.events[\'onchange\'].data',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
[ { keyword: 'const',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/then/const',
    params: { allowedValue: 'td-vocab-type--Link=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.links[0]',
    schemaPath: '#/definitions/link_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.csv
    Processing instance Siemens/siemens-node-wot/minItems_maxItems_oneOf
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.json
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.json
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.json /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.json" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.json
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.json  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\'].oneOf[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\'].oneOf[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pOne\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
[ { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
[ { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_items=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
[ { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_maxItems=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
[ { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_minItems=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_oneOf=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_writeOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_writeOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-string-type.json
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pOne\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pOne\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\'].oneOf[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-description--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\'].oneOf[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pOne\'].oneOf[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-description--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\'].oneOf[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\'].oneOf[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-items--ArraySchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\'].oneOf[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-items--ArraySchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\'].oneOf[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maxItems--ArraySchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\'].oneOf[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-maxItems--ArraySchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\'].oneOf[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minItems--ArraySchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\'].oneOf[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-minItems--ArraySchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-oneOf--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\'].oneOf[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_array=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\'].oneOf[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_array=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\'].oneOf[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\'].oneOf[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pOne\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'pTwo\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.csv
    Processing instance Siemens/siemens-node-wot/propertiesTest-siemens
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/propertiesTest-siemens.json
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/propertiesTest-siemens.json
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/propertiesTest-siemens.json /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/propertiesTest-siemens.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/propertiesTest-siemens.json" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/propertiesTest-siemens.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/propertiesTest-siemens.json
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/propertiesTest-siemens.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/propertiesTest-siemens.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/propertiesTest-siemens.json  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/then/const',
    params: { allowedValue: 'td-context-default-language=not-impl' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/then/const',
    params: 
     { allowedValue: 'td-context-ns-thing-map-of-namespaces=not-impl' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=not-impl' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_enum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_writeOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_writeOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-title-description_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-title-description_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-descriptions--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-descriptions--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-enum--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/propertiesTest-siemens.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/propertiesTest-siemens.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/propertiesTest-siemens.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/propertiesTest-siemens.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/propertiesTest-siemens.csv
    Processing instance Siemens/siemens-node-wot/readWriteAllProperties
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/readWriteAllProperties.json
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/readWriteAllProperties.json
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/readWriteAllProperties.json /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/readWriteAllProperties.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/readWriteAllProperties.json" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/readWriteAllProperties.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/readWriteAllProperties.json
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/readWriteAllProperties.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/readWriteAllProperties.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/readWriteAllProperties.json  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
[ { keyword: 'const',
    dataPath: '.forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-thing=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_enum=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_title=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_writeOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_writeOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-title-description_descriptions=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-title-description_titles=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-descriptions--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-descriptions--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-enum--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[0]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[2]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[4]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-op--Form_readproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[5]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-title--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-titles--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
[ { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'status\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'brightness\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/readWriteAllProperties.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/readWriteAllProperties.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/readWriteAllProperties.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/readWriteAllProperties.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/readWriteAllProperties.csv
    Processing instance Siemens/siemens-node-wot/responseTest-siemens
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/responseTest-siemens.json
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/responseTest-siemens.json
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/responseTest-siemens.json /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/responseTest-siemens.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/responseTest-siemens.json" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/responseTest-siemens.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/responseTest-siemens.json
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/responseTest-siemens.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/responseTest-siemens.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/responseTest-siemens.json  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'smileGenerator\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'smileGenerator\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'smileGenerator\'].input',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'smileGenerator\'].input',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.actions[\'smileGenerator\'].output',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'smileGenerator\'].output',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.actions[\'smileGenerator\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'smileGenerator\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.actions[\'smileGenerator\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'smileGenerator\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'smileGenerator\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'smileGenerator\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'smileGenerator\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'smileGenerator\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'smileGenerator\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-input--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'smileGenerator\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'smileGenerator\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-output--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'smileGenerator\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
[ { keyword: 'const',
    dataPath: '.actions[\'smileGenerator\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-response--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'smileGenerator\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
[ { keyword: 'const',
    dataPath: '.actions[\'smileGenerator\'].input',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'smileGenerator\'].input',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.actions[\'smileGenerator\'].output',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'smileGenerator\'].output',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/responseTest-siemens.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/responseTest-siemens.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/responseTest-siemens.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/responseTest-siemens.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/responseTest-siemens.csv
    Processing instance Siemens/siemens-node-wot/securityTest-siemens
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/securityTest-siemens.json
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/securityTest-siemens.json
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/securityTest-siemens.json /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/securityTest-siemens.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/securityTest-siemens.json" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/securityTest-siemens.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/securityTest-siemens.json
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/securityTest-siemens.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/securityTest-siemens.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/securityTest-siemens.json  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'secret\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'secret\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
[ { keyword: 'const',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_writeOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-string-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-string-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.properties[\'secret\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'secret\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-in--BasicSecurityScheme=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_basic=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'basic_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
[ { keyword: 'const',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_string=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'secret\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/securityTest-siemens.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/securityTest-siemens.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/securityTest-siemens.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/securityTest-siemens.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/securityTest-siemens.csv
    Processing instance Siemens/siemens-node-wot/uriVariablesTest-siemens
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.json
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.json
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.json /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.json" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.json
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.json  for validation
test result is  true
Taking Assertion Schema found at  ./Assertions/td-action-arrays.json
Taking Assertion Schema found at  ./Assertions/td-action-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-action-names_description.json
[ { keyword: 'const',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-action-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-action-names_title.json
Taking Assertion Schema found at  ./Assertions/td-action-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-action-names_uriVariables.json
[ { keyword: 'const',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_uriVariables=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-action-arrays_uriVariables=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-actions_existence.json
Taking Assertion Schema found at  ./Assertions/td-context-default-language.json
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-map-of-namespaces.json
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-map-of-namespaces=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context-ns-thing-optional.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/then/const',
    params: { allowedValue: 'td-context-ns-thing-optional=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/else/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'if',
    dataPath: '[\'@context\']',
    schemaPath: '#/then/properties/%40context/if',
    params: { failingKeyword: 'else' },
    message: 'should match "else" schema' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-context.json

!!!! COMMENT Until iri-reference is supported by ajv, it will stay as uri-reference in playground
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-context=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-event-arrays.json
Taking Assertion Schema found at  ./Assertions/td-event-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-event-names_description.json
Taking Assertion Schema found at  ./Assertions/td-event-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-event-names_title.json
Taking Assertion Schema found at  ./Assertions/td-event-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-event-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-events_existence.json
Taking Assertion Schema found at  ./Assertions/td-integer-type.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-integer-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-links.json
Taking Assertion Schema found at  ./Assertions/td-number-type.json
Taking Assertion Schema found at  ./Assertions/td-op-for-action.json
[ { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-action=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-event.json
Taking Assertion Schema found at  ./Assertions/td-op-for-property.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-op-for-property=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-op-for-thing.json
Taking Assertion Schema found at  ./Assertions/td-properties_existence.json
Taking Assertion Schema found at  ./Assertions/td-property-arrays.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-property-arrays=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_at-type.json
Taking Assertion Schema found at  ./Assertions/td-property-names_const.json
Taking Assertion Schema found at  ./Assertions/td-property-names_description.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-property-names_enum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_items.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maxItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_maximum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minItems.json
Taking Assertion Schema found at  ./Assertions/td-property-names_minimum.json
Taking Assertion Schema found at  ./Assertions/td-property-names_oneOf.json
Taking Assertion Schema found at  ./Assertions/td-property-names_properties.json
Taking Assertion Schema found at  ./Assertions/td-property-names_readOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_readOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_required.json
Taking Assertion Schema found at  ./Assertions/td-property-names_title.json
Taking Assertion Schema found at  ./Assertions/td-property-names_titles.json
Taking Assertion Schema found at  ./Assertions/td-property-names_type.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-property-names_unit.json
Taking Assertion Schema found at  ./Assertions/td-property-names_uriVariables.json
Taking Assertion Schema found at  ./Assertions/td-property-names_writeOnly.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: { allowedValue: 'td-property-names_writeOnly=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-string-type.json
Taking Assertion Schema found at  ./Assertions/td-title-description_descriptions.json
Taking Assertion Schema found at  ./Assertions/td-title-description_titles.json
Taking Assertion Schema found at  ./Assertions/td-version.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-alg--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-anchor--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-at-type--Thing.json
[ { keyword: 'const',
    dataPath: '',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-at-type=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-authorization--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-base--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-cancellation--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-const--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentCoding.json
Taking Assertion Schema found at  ./Assertions/td-vocab-contentType-Form.json
[ { keyword: 'const',
    dataPath: '.forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[4]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[4]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[5]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[5]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-contentType--Form=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-created--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-data--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-data-schema_description=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-description--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-description--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-description--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-descriptions--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-enum--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-flow--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-format--PopSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-forms--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-forms--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-idempotent--ActionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-idempotent--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-idempotent--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-idempotent--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--CertSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PSKSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-identity--PublicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-in--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-input--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-items--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maxItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-maximum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minItems--ArraySchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--IntegerSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-minimum--NumberSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-modified--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--APIKeySecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BasicSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--BearerSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-name--PoPSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-observable--PropertyAffordance.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/then/const',
    params: 
     { allowedValue: 'td-vocab-observable--PropertyAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/definitions/property_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-oneOf--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_invokeaction.json
[ { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'increment\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[0]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[0]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[2]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[2]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_invokeaction=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_observeproperty.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-op--Form_observeproperty=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_readproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_subscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unobserveproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_unsubscribeevent.json
Taking Assertion Schema found at  ./Assertions/td-vocab-op--Form_writeproperty.json
Taking Assertion Schema found at  ./Assertions/td-vocab-output--ActionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-properties--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-proxy--SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-qop--DigestSecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-readOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-readOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-refresh--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-rel--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-required--ObjectSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-response--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-safe--ActionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-safe--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-safe--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'reset\']',
    schemaPath: '#/definitions/action_element/then/const',
    params: { allowedValue: 'td-vocab-safe--ActionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'reset\']',
    schemaPath: '#/definitions/action_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_apikey.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_basic.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_bearer.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_cert.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_digest.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_nosec.json
[ { keyword: 'const',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/then/const',
    params: { allowedValue: 'td-vocab-scheme--SecurityScheme_nosec=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.securityDefinitions[\'nosec_sc\']',
    schemaPath: '#/definitions/securityScheme/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_oauth2.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_pop.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_psk.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scheme--SecurityScheme_public.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-scopes--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-security--Form.json
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_longpoll.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_longpoll=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_sse.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_sse=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subprotocol--Form_websub.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[1]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/definitions/form_element/then/const',
    params: { allowedValue: 'td-vocab-subprotocol--Form_websub=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\'].forms[3]',
    schemaPath: '#/definitions/form_element/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-subscription--EventAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-support--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-title--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--InteractionAffordance.json
Taking Assertion Schema found at  ./Assertions/td-vocab-titles--Thing.json
Taking Assertion Schema found at  ./Assertions/td-vocab-token--OAuth2SecurityScheme.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_array.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_boolean.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_integer.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-type--DataSchema_integer=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_null.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_number.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_object.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--DataSchema_string.json
Taking Assertion Schema found at  ./Assertions/td-vocab-type--Link.json
Taking Assertion Schema found at  ./Assertions/td-vocab-unit--DataSchema.json
Taking Assertion Schema found at  ./Assertions/td-vocab-uriVariables--InteractionAffordance.json
[ { keyword: 'const',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-uriVariables--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'increment\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' },
  { keyword: 'const',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/then/const',
    params: 
     { allowedValue: 'td-vocab-uriVariables--InteractionAffordance=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.actions[\'decrement\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
Taking Assertion Schema found at  ./Assertions/td-vocab-writeOnly--DataSchema.json
[ { keyword: 'const',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/then/const',
    params: { allowedValue: 'td-vocab-writeOnly--DataSchema=pass' },
    message: 'should be equal to constant' },
  { keyword: 'if',
    dataPath: '.properties[\'count\']',
    schemaPath: '#/if',
    params: { failingKeyword: 'then' },
    message: 'should match "then" schema' } ]
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.csv
>>>>>>>>>>>> Merge: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/propertiesTest-siemens.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/readWriteAllProperties.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/responseTest-siemens.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/securityTest-siemens.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.csv
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/Siemens/siemens-node-wot.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/dataSchemaTest-siemens.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/fullInteractionsTest-siemens.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/minItems_maxItems_oneOf.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/propertiesTest-siemens.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/readWriteAllProperties.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/responseTest-siemens.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/securityTest-siemens.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot/uriVariablesTest-siemens.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot.csv.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot.csv.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/Siemens/siemens-node-wot.csv
Processing organization SmartThings
  in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings
  Processing implementation SmartThings/st-td-huelight
    in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-huelight.json
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-huelight.json
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-huelight.json /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-td-huelight.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-huelight.json" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-td-huelight.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-huelight.json
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-td-huelight.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-td-huelight.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-huelight.json  for validation
VALIDATION ERROR!!! :  data should have required property 'title'
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-td-huelight.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-huelight.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-huelight.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-td-huelight.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-td-huelight.csv
  Processing implementation SmartThings/st-td-tradfri-light
    in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-tradfri-light.json
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-tradfri-light.json
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-tradfri-light.json /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-td-tradfri-light.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-tradfri-light.json" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-td-tradfri-light.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-tradfri-light.json
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-td-tradfri-light.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-td-tradfri-light.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-tradfri-light.json  for validation
VALIDATION ERROR!!! :  data should have required property 'title'
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-td-tradfri-light.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-tradfri-light.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-td-tradfri-light.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-td-tradfri-light.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-td-tradfri-light.csv
  Processing implementation SmartThings/st-impl-node-red
    under /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red
    Processing instance SmartThings/st-impl-node-red/td-illuminance
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-illuminance.json
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-illuminance.json
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-illuminance.json /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-illuminance.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-illuminance.json" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-illuminance.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-illuminance.json
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-illuminance.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-illuminance.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-illuminance.json  for validation
VALIDATION ERROR!!! :  data should have required property 'title'
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-illuminance.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-illuminance.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-illuminance.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-illuminance.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-illuminance.csv
    Processing instance SmartThings/st-impl-node-red/td-motion-event
      in /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-motion-event.json
>>>>>>>>>>>> Processing: /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-motion-event.json
npm run-script testTD /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-motion-event.json /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-motion-event.csv

> tdplayground@1.0.0 testTD /home/mmccool/Dev/wot/testing/tools/thingweb-playground/AssertionTester
> node assertionTester.js "/home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-motion-event.json" "/home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-motion-event.csv"

Taking input  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-motion-event.json
Taking output  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-motion-event.csv
Validating a single TD and outputting result to  /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-motion-event.csv
=================================================================
Taking TD found at  /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-motion-event.json  for validation
VALIDATION ERROR!!! :  data should have required property 'title'
test result is  false
INVALID TD, SKIPPING TO NEXT TD
The csv was saved!
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-motion-event.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-motion-event.{csv,CSV}.temp
mv /home/mmccool/Dev/wot/testing/tests/2019-05/inputs/SmartThings/st-impl-node-red/td-motion-event.{csv,CSV}.temp /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-motion-event.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-motion-event.csv
>>>>>>>>>>>> Merge: /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-illuminance.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-motion-event.csv
node mergeResults.js /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-illuminance.csv /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red/td-motion-event.csv > /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red.csv
<<<<<<<<<<<< Output written to /home/mmccool/Dev/wot/testing/tests/2019-05/outputs/SmartThings/st-impl-node-red.csv
