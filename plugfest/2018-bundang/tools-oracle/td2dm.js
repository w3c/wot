// Author: Michael.Lagally@oracle.com
// Created: 19.3.2018
// Last modified: 7.5.2018

"use strict";

var fs = require("fs");
var path = require("path");
var baseDir = ".";

//console.log(`td-dm started`);

var filename=process.argv[2];

var verbose=process.argv[3] ==="-v";

var content=fs.readFileSync('./'+filename);
var path=filename.substring(0, filename.lastIndexOf("/"));
// get package directory name
var pkg=path.substring(path.lastIndexOf("/")+1);
// strip path and extension
var plainfn=path.substring(filename.lastIndexOf("/")+1, filename.lastIndexOf("."));

var td=JSON.parse(content);
if (verbose) console.log(td);

if (verbose) console.log("-----");

var dm={};
dm.name=td.name;
dm.description=td.base;
dm.urn="urn:com:"+pkg+":"+td.name;

var now=new Date(Date.now());
dm.createdAsString=now.toISOString();
dm.created=now.valueOf();
dm.lastModifiedAsString=now.toISOString();
dm.lastModified=now.valueOf();
dm.userLastModified="auto-generated by td2dm converter";
dm.attributes=[];
dm.actions=[];
//dm.formats=[];
//dm.links=[];

for (var p in td.properties) {
    if (verbose) console.log(p);
    var prop={};
    prop.name=p;
    var iac=td.properties[p];
    prop.description=iac.label;
    if (iac.properties) {
      prop.type=iac.properties.type.toUpperCase();
      if (iac.properties.minimum != iac.properties.maximum) {
        prop.range=iac.properties.minimum+","+iac.properties.maximum;
      }
    } else {
       prop.type=iac.type;
    }
    prop.writable=iac.writable;
    dm.attributes.push(prop);
    if (verbose) console.log(prop);
}

if (verbose) console.log("-----");

for (var a in td.actions) {
    if (verbose) console.log(iac);
    var act={};
    act.name=a;
    var iac=td.actions[a];
    act.description=iac.label;

    dm.actions.push(act);
    if (verbose) console.log(act);
}

if (verbose) console.log("-----");

for (var e in td.events) {
    if (verbose) console.log(iac);
    var evt={};
    var iac=td.events[e];
    evt.name=e;
    evt.description=iac.description;
    if (verbose) console.log(act);
}
if (verbose) console.log("-----");

console.log(JSON.stringify(dm, null, "\t"));
